define service {
    use generic-service
    host_name lithium.local
    service_description nagios-httpd
    display_name Nagios Web Interface
    check_command check_curl!-p 18120
}

define service {
    use generic-service
    host_name localhost
    service_description Caddy
    display_name Caddy web server
    check_command check_curl!-p 2019 --expect='HTTP/1.1 404'
}

define service {
    use generic-service
    host_name lithium.local
    service_description attic
    display_name Attic Binary Cache
    # No health endpoint exists
    check_command check_curl!-p 10100 --ssl=1.3 --expect='HTTP/2 200' --string 'Attic Binary Cache'
}

define service {
    use generic-service
    host_name localhost
    service_description attic
    display_name Attic Binary Cache (localhost)
    # No health endpoint exists
    check_command check_curl!-p 18080 --ssl=1.3 --expect='HTTP/2 200' --string 'Attic Binary Cache'
}

define service {
    use generic-service
    host_name lithium.local
    service_description anki-sync-server
    display_name Anki Sync Server
    # TODO: Query /health endpoint instead
    check_command check_curl!-p 10101 --ssl=1.3 --url=/sync/begin --expect='HTTP/2 405'
}

define service {
    use generic-service
    host_name localhost
    service_description anki-sync-server
    display_name Anki Sync Server (localhost)
    # TODO: Query /health endpoint instead
    check_command check_curl!-p 18090 --url=/sync/begin --expect='HTTP/2 405'
}

define service {
    use generic-service
    host_name lithium.local
    service_description radicale
    display_name Radicale DAV
    # No health endpoint there
    check_command check_curl!-p 10102 --ssl=1.3 --url=/.web/
}

define service {
    use generic-service
    host_name localhost
    service_description radicale
    display_name Radicale DAV (localhost)
    # No health endpoint there
    check_command check_curl!-p 18110 --ssl=1.3 --url=/.web/
}

define service {
    use generic-service
    host_name lithium.local
    service_description ntfy-sh
    display_name ntfy-sh
    # No health endpoint there
    check_command check_curl!-p 10104 --ssl=1.3 --url=/v1/health --expect='HTTP/2 200' --string '{"healthy":true}'
}

define service {
    use generic-service
    host_name localhost
    service_description ntfy-sh
    display_name ntfy-sh
    # No health endpoint there
    check_command check_curl!-p 18130 --ssl=1.3 --url=/v1/health --expect='HTTP/2 200' --string '{"healthy":true}'
}

define service {
    use generic-service
    host_name lithium.local
    service_description borgmatic
    active_checks_enabled 0
    display_name Borgmatic
    check_command check_dummy!3
}

define service {
    use generic-service
    host_name lithium.local
    service_description offlineimap
    active_checks_enabled 0
    display_name OfflineIMAP
    check_command check_dummy!3
}
