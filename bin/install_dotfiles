#!/usr/bin/env fish
set_color blue
echo
echo "               =============="
echo "               = pufferfish ="
echo "               =============="
echo
set_color yellow
printf "\
                    /-  :h:  -/
               :+` `NN..oMo..NN` `+:
               :Mm+yNMmddhddmMNy+mM:
           /Mh:oNmy+:.........:+yNNo:hM/
         `  :MMh/.:m:.:N:.:N:.:m/./hMM:  `
        -NNyNm:..-...-...-...-....../mNyNN:
   os++:``sMh.../m:.:m:.:m:.:m:.......hMs`
   MmsydNdMd.......-/+/-........+/.-o-.dM:.
   dN+::/mM/......oNhsyNh:......sNydm:./MMm
   `dNy/:dN-...../Ms...-sd:......-/:..oNm+
   `dNy/:dN-.....sM:..................oNm+
   dN+::/mM/...../Ms....+d:............/MMd
   MmsydNdMd......oNhshh--.............dM-
   oso+:``sMh......-/+/-..............hMs`
        -NNyNm:...................../mNyNN:
         `  :MMh/................./hMM:  `
           /Mh:oNNy+:.........:+yNNo:hM/
               :Mm+yNMmddhddmMNy+mM:
               :+` `NN..oMo..NN` `+:
                    /-  :h:  -/

" | cat
set_color normal

set -l DOTFILES "$HOME/.dotfiles"
set -l XDG_CONFIG_HOME "$HOME/.config"

echo "Ensure XDG_CONFIG_HOME"
echo "----------------------"
mkdir -p "$XDG_CONFIG_HOME"
or exit 1
set_color green
echo "All good!"
set_color normal
echo

echo "Linking Config Files"
echo "--------------------"
if not ln -sfv "$DOTFILES/fish" "$XDG_CONFIG_HOME"
    set -l backup_path "$XDG_CONFIG_HOME/fish.backup"-(random)
    echo "Moving existing fish to backup folder at $backup_path"
    mv -v "$XDG_CONFIG_HOME/fish" "$backup_path"
    echo "Trying to link again"
    ln -sfv "$DOTFILES/fish" "$XDG_CONFIG_HOME"
    or exit 1
end

ln -sfv "$DOTFILES/nvim" "$XDG_CONFIG_HOME"
and ln -sfv "$DOTFILES/i3" "$XDG_CONFIG_HOME"
and ln -sfv "$DOTFILES/foot" "$XDG_CONFIG_HOME"
and ln -sfv "$DOTFILES/sway" "$XDG_CONFIG_HOME"
and ln -sfv "$DOTFILES/i3status" "$XDG_CONFIG_HOME"
and ln -sfv "$DOTFILES/karabiner" "$XDG_CONFIG_HOME"
and ln -sfv "$DOTFILES/systemd" "$XDG_CONFIG_HOME"
and ln -sfv "$DOTFILES/tmux" "$XDG_CONFIG_HOME"
and ln -sfv "$DOTFILES/git" "$XDG_CONFIG_HOME"
and ln -sfv "$DOTFILES/pomoglorbo" "$XDG_CONFIG_HOME"
and ln -sfv "$DOTFILES/nixpkgs" "$XDG_CONFIG_HOME"
and ln -sfv "$DOTFILES/nix" "$XDG_CONFIG_HOME"
# TODO make this vendor specific
and ln -sfv "$DOTFILES/x" "$XDG_CONFIG_HOME"
and ln -sfv "$XDG_CONFIG_HOME/x/Xresources" "$HOME/.Xresources"
and ln -sfv "$XDG_CONFIG_HOME/x/Xresources" "$HOME/.Xdefaults"
and ln -sfv "$DOTFILES/fonts" "$HOME/.local/share"
or exit 1

# Poetry needs some extra hand holding on macOS
if is_darwin
    echo "Darwin hand holding"
    ln -sfv "$DOTFILES/pypoetry" "$HOME/Library/Application Support"
else
    ln -sfv "$DOTFILES/pypoetry" "$XDG_CONFIG_HOME"
end
or exit 1

set_color green
echo "All good!"
set_color normal
echo

echo "Updating neovim"
echo "---------------"
if not nvim +"PlugInstall --sync" +qa
    set_color red
    echo "That failed terribly"
    set_color normal
    exit 1
end
set_color green
echo "All good!"
set_color normal
echo

if test (which fish) != "$SHELL"
    set_color red
    echo "Warning"
    echo "-------"
    echo "This command was not executed from fish"
    echo "Please ensure that fish is set as your login shell"
    echo "For more info, please refer to"
    echo
    set_color blue
    echo "https://github.com/justuswilhelm/pufferfish#installing-fish"
    set_color normal
    echo
end

set_color green
echo "All Done!"
set_color normal
